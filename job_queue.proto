syntax = "proto3";

package job_queue;

// A service defining the contract between the Master and its clients (Worker/Dashboard).
service JobQueue {
  // 1. Worker sends heartbeats to Master
  rpc Heartbeat (WorkerInfo) returns (Empty);

  // 2. Worker requests jobs from Master (Server Streaming)
  rpc GetJobs (WorkerInfo) returns (stream JobRequest);

  // 3. Worker reports job result to Master
  rpc SendResult (JobResult) returns (Ack);

  // 4. Dashboard/Client submits a new job to Master
  rpc SendJob (JobRequest) returns (Ack);

  // 5. Dashboard/Client requests all job statuses from Master
  rpc GetAllJobs (Empty) returns (AllJobsResponse);
}

// --- Message Definitions ---

// Empty message for requests/responses that don't need a payload.
// This is the message that was missing, causing the 'Empty' attribute error.
message Empty {}

// Acknowledgement message returned for successful/failed actions.
message Ack {
  bool success = 1;
  string message = 2;
}

// Information about a Worker used for heartbeats and job requests.
message WorkerInfo {
  string worker_id = 1;
}

// Job structure used for client submission and queueing.
message JobRequest {
  string job_id = 1;
  string job_type = 2;
  int32 payload = 3; // e.g., the 'n' for fibonacci(n)
}

// Job structure for reporting results back to the Master.
message JobResult {
  string job_id = 1;
  string worker_id = 2;
  string result = 3;
  bool success = 4;
}

// Response for the Dashboard's GetAllJobs RPC.
message AllJobsResponse {
  string jobs_json = 1; // A JSON string containing the status of all jobs.
}
