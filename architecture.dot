digraph G {
    graph [rankdir=LR, labelloc="t", label="Ninja Nucleus: System Architecture", fontname="Helvetica"];
    node [fontname="Helvetica", shape=box, style=filled];
    edge [fontname="Helvetica"];

    subgraph cluster_0 {
        label = "Clients";
        color = lightgrey;
        node [shape=box, style=filled, fillcolor=lightblue];
        client [label="Client\n(Job Submitter)"];
    }

    subgraph cluster_1 {
        label = "Master Node";
        color = lightgrey;
        node [shape=box, style=filled, fillcolor=lightgreen];
        master [label="Master"];
        job_queue [label="Job Queue\n(Persistent)"];
        jobs_file [label="jobs.json\n(Persistence)"];
    }
    
    subgraph cluster_2 {
        label = "Workers";
        color = lightgrey;
        node [shape=box, style=filled, fillcolor=lightyellow];
        worker_1 [label="Worker 1"];
        worker_2 [label="Worker 2"];
    }

    // Edge definitions
    client -> master [label="Submit Job\n(SendJob RPC)"];
    
    master -> job_queue [label="Adds Job", arrowhead=open];
    job_queue -> master [label="Dispatches Job", arrowhead=open];

    jobs_file -> job_queue [label="Loads/Saves Queue", dir=both, arrowhead=open, arrowtail=open, style=dashed, color=gray];
    
    master -> worker_1 [label="Assigns Job\n(GetJobs Stream)"];
    master -> worker_2 [label="Assigns Job\n(GetJobs Stream)"];
    
    worker_1 -> master [label="Sends Result\n(SendResult RPC)"];
    worker_2 -> master [label="Sends Result\n(SendResult RPC)"];

    worker_1 -> master [label="Heartbeat\n(Heartbeat RPC)", style=dashed, color=red];
    worker_2 -> master [label="Heartbeat\n(Heartbeat RPC)", style=dashed, color=red];
}
